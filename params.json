{"name":"Twitter Broadcast","tagline":"Node.js + Twitter Streaming API + Websockets = <3","body":"It’s a nodejs module provide you easy interface to get the stream of tweets.\r\n\r\n[Article about this in Russian in my blog.](http://simonenko.su/53381781858/pulse-of-web-developments)\r\n\r\n```js\r\nvar twtcst = require('twtcst');\r\n\r\n// array of words you want to track\r\nvar words = ['javascript', 'coffeescript'];\r\n\r\n// object contains your oauth tokens\r\nvar oauth = {\r\n  'consumer_key': '',\r\n  'consumer_secret': '',\r\n  'token': '',\r\n  'token_secret': ''\r\n};\r\n\r\nvar twitter = twtcst(words, oauth);\r\n\r\n// twitter stream api\r\ntwitter.filter(function(error, tweet) {\r\n  console.log(tweet);\r\n});\r\n```\r\n\r\n## Install with NPM\r\n\r\n```bash\r\nnpm install twtcst\r\n```\r\n\r\n## API\r\n\r\n`twtcst` has three parameters. The first is `words` you want to search, the second is your `oauth` tokens, and the third (optional) is `options` to define some filters, counters and views.\r\n\r\n```js\r\nvar twitter = twtcst(words, oauth, options);\r\n```\r\n\r\nThe `twitter` object has two methods: `search` and `filter`.\r\n\r\n**search** implement [Twitter Search API](http://dev.twitter.com/docs/api/1.1/get/search/tweets). It takes a callback as an argument. The callback will be caused when all tweets are found. The first argument of callback is error (if it has occured) and the second is array of tweets.\r\n\r\n```js\r\ntwitter.search(function(error, tweets) {\r\n  if (tweets) {\r\n    tweets.forEach(function(tweet) {\r\n      message(tweet);\r\n    });\r\n  }\r\n});\r\n```\r\n\r\n**filter** implement [Twitter Streaming API](http://dev.twitter.com/docs/api/1.1/post/statuses/filter). It cause callback and passed new tweet to it every time new tweet appears in Twitter Stream. The filter pass to callback two options: `error` and `tweet`.\r\n\r\n```js\r\ntwitter.filter(function(error, tweet) {\r\n  if (tweet) {\r\n    message(tweet);\r\n  }\r\n});\r\n```\r\n\r\n**Format of tweets** is similar in both cases:\r\n\r\n```js\r\n{\r\n  id: \"Tweet id\"\r\n  link: \"Link to user page on Twitter\"\r\n  avatar: \"Link to user profile image\"\r\n  login: \"User login (@username without @)\"\r\n  name: \"User name or login\"\r\n  text: \"Improved text of the tweet\"\r\n  date: \"YYYY-MM-DD HH:MM\"\r\n  iso: \"Date in ISO\"\r\n}\r\n```\r\n\r\n### Words\r\n\r\n`words` is array contains words you want to search. It also can contains hashtags started with hash, e.g.:\r\n\r\n```js\r\nvar words = [\r\n  \"#javascript\",\r\n  \"#coffeescript\"\r\n];\r\n```\r\n\r\n### OAuth tokens\r\n\r\n`oauth` is an object in format required by Twitter API. You can get tokens by [creating new app](http://dev.twitter.com/apps/new) or [from existing app](http://dev.twitter.com/apps).\r\n\r\n```js\r\nvar oauth = {\r\n  'consumer_key': '',\r\n  'consumer_secret': '',\r\n  'token': '',\r\n  'token_secret': ''\r\n};\r\n```\r\n\r\n### Options\r\n\r\nAll options are optional.\r\n\r\n**version** is `string` of Twitter Stream API version (1.1 by default)\r\n\r\n```js\r\n\"version\": \"1.1\"\r\n```\r\n\r\n**lang** is `array` of languages. If the language of tweet is not in the array, the tweet won’t be displayed.\r\n\r\n```js\r\n\"lang\": [\"en\", \"ru\"]\r\n```\r\n\r\n**spam** is `array` of strings. Tweets contain one of the strings won’t be displayed.\r\n\r\n```js\r\n\"spam\": [\r\n  'text/javascript',\r\n  'jquery'\r\n]\r\n```\r\n\r\n**mute** is `array` of usernames. Tweets writen by people specified in this array won’t be displayed.\r\n\r\n```js\r\n\"mute\": [\r\n  \"simonenko\",\r\n  \"isquariel\"\r\n]\r\n```\r\n\r\n**retweets** is `boolean`. If it is `false` retweets won’t be displayed. The variable is `false` by default.\r\n\r\n```js\r\n\"retweets\": false\r\n```\r\n\r\n**mentions** work as **retweets**. If it is `false` mentions won’t be displayed.\r\n\r\n```js\r\n\"mentions\": false\r\n```\r\n\r\n**userpics** is `boolean`. If it is `true` tweet posted by users with default avatar won’t be displayed.\r\n\r\n```js\r\n\"userpics\": true\r\n```\r\n\r\n**hashtags** is `number` defining max quantity of hashtags in tweets. Tweets contains more hashtags than specified won’t be displayed.\r\n\r\n```js\r\n\"hashtags\": 5\r\n```\r\n\r\n**count** is boolean. If it is true filter will be send count of all tweets with every tweet else it won’t.\r\n\r\n```js\r\n\"count\": true\r\n```\r\n\r\n**storage** specify file where save tweet quantity filtered by your request. It will be used only if **count** is true.\r\n\r\n```js\r\n\"storage\": \"count.txt\"\r\n```\r\n\r\n**media** specify settings for images in tweets. You can specify width and height of images and class of links images wrapped in.\r\n\r\n```js\r\n\"media\": {\r\n  \"width\": 500,\r\n  \"height\": 500,\r\n  \"class\": \"tweet_image\"\r\n}\r\n```\r\n\r\n## Development\r\n\r\nTo get the source form Github execute\r\n\r\n```bash\r\ngit clone git@github.com:serenity/twtcst.git\r\ncd twtcst\r\n\r\nnpm link\r\ncake build\r\n```\r\n\r\nThen you should specify your access token in `examples/staff/oauth.js`. Now you have a working example.\r\n\r\nTo try `twtcst.filter` execute\r\n\r\n```bash\r\nnode examples/filter.js\r\n```\r\n\r\nThe script puts new tweet to console.\r\n\r\nTo try `twtcst.search` execute\r\n\r\n```bash\r\nnode examples/search.js\r\n```\r\n\r\nFirst the scripts puts an array of tweets get from search to console and then it will output tweets from stream.\r\n\r\nFinally, you can view the working html page with stream of tweets. Just execute\r\n\r\n```bash\r\nnode examples/socket-server.js\r\n```\r\n\r\nand open the examples/index.html in your browser.\r\n\r\n---\r\n\r\n## Authors\r\n\r\n* [Alexey Simonenko](//github.com/meritt), [alexey@simonenko.su](mailto:alexey@simonenko.su), [simonenko.su](http://simonenko.su)\r\n* [Sophia Ilinova](//github.com/isquariel), [tavsophi@gmail.com](mailto:tavsophi@gmail.com)\r\n\r\n## License\r\n\r\nThe MIT License, see the included `License.md` file.\r\n","google":"UA-37507032-3","note":"Don't delete this file! It's used internally to help with page regeneration."}